/*=====================================
  ■■■ 실행 흐름의 컨트롤(제어문) ■■■
  - 반복문 실습(do ~while문 실습)
=====================================*/

// 사용자로부터 여러 개의 정수를 입력받아
// 그 합을 계산하여 결과를 출력해주는 프로그램을 구현한다.
// 단, 입력 과정에서 사용자가 『-1』을 입력하게 되면
// 입력받는 행위를 중단하고, 그동안 입력받아둔 정수들의 합을 연산하여
// 출력할 수 있또록 구현한다.
// 입력받는 과정은 Scanner 인스턴스를 생성하여 처리한다.
// (몇 번 반복하는 건지 정해진 게 아님)

// 실행 예)
// 1번째 정수 입력(-1 종료) : 10
// 2번째 정수 입력(-1 종료) : 52
// 3번째 정수 입력(-1 종료) : 8
// 4번째 정수 입력(-1 종료) : 9
// 5번째 정수 입력(-1 종료) : 46
// 6번째 정수 입력(-1 종료) : 24
// 7번째 정수 입력(-1 종료) : -1

// >> 현재까지 입력된 정수의 합 : 149
// 계속하려면 아무 키나...

import java.util.Scanner;

public class Test055
{
	public static void main(String[] args)
	{

		/*
		Scanner sc = new Scanner(System.in);
		int n, a, sum;
		a=1;
		sum=0;

		do
		{
			System.out.printf("%d번째 정수 입력(-1 종료) : ",a);
			n = sc.nextInt();
			sum += n;
			a++;
		}
		while (n!=-1);
		//while (n==-1);

		
		System.out.println(">> 현재까지 입력된 정수의 합 : " + sum);
		*/
		
		// Scanner 인스턴스 생성
		Scanner sc = new Scanner(System.in);
		
		// ○ 주요 변수 선언
		int num;                            //-- 외부로부터 사용자 입력값을 담아둘 변수
		int sum=0;							//-- 누적합을 담을 변수
		int n=1;							//-- 몇 번째 입력값인지를 담을 변수 

		// ○ 연산 및 처리
		do
		{
			System.out.printf("%d번째 정수 입력(-1 종료) : ", n);
			num = sc.nextInt();
			sum += num;
			n++;
		}
		while (num != -1);

	
		// ○ 결과 출력
		System.out.printf("/n>> 현재까지 입력된 정수의 합 : %d\n", (sum+1));

		// 왜 sum+1을 해야하나?? -1도 연산에 가담했기 때문에!!!!!
	}

}
