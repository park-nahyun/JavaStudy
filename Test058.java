/*=====================================
  ■■■ 실행 흐름의 컨트롤(제어문) ■■■
  - 반복문 실습(for 문 실습)
  - 다중 for문(반복문의 중첩)을 활용한 구구단 출력 실습
=====================================*/

// 실행 예)
/* 
===[2단]====
2 * 1 = 2
2 * 2 = 4
	:
2 * 9 = 28

===[3단]===
3 * 1 = 3
3 * 2 = 6
	:
	:
9 * 9 = 81

계속하려면 아무 키나...
*/
// 중첩은 조건문 '안에' 조건문 들어가있는 것.. 병렬 아님..
// 밖의 조건문은 웅웅! 안의 조건문은 쑝쑝 거린다! 고 생각하자..
// 그럼 웅~ 쑝쑝쑝... 웅~쑝쑝쑝...하고 실행된다.... 이해가 안간다..
// 한 단이 웅~  각각의 작은 곱셈들이 쑝쑝.. ㅇㅋ..?

public class Test058
{
	public static void main(String[] args)
	{
		int i, j;
		for(i=2 ; i<=9 ; i++)	// 단 처리 (웅~) → 2 3 4 5 6 7 8 9 
		{	
			System.out.printf("===[%d단]====\n", i);
			
			for(j=1 ; j<=9 ; j++)			// 곱해지는 수 처리(쑝~) → 1 2 3 4 5 6 7 8 9 
			{
				System.out.printf("%d * %d = %d\n", i, j, (i*j));
			}

			System.out.println();			// 개행
			
		}
	}
}

/* 
===[2단]====
2 * 1 = 2
2 * 2 = 4
2 * 3 = 6
2 * 4 = 8
2 * 5 = 10
2 * 6 = 12
2 * 7 = 14
2 * 8 = 16
2 * 9 = 18

===[3단]====
3 * 1 = 3
3 * 2 = 6
3 * 3 = 9
3 * 4 = 12
3 * 5 = 15
3 * 6 = 18
3 * 7 = 21
3 * 8 = 24
3 * 9 = 27

===[4단]====
4 * 1 = 4
4 * 2 = 8
4 * 3 = 12
4 * 4 = 16
4 * 5 = 20
4 * 6 = 24
4 * 7 = 28
4 * 8 = 32
4 * 9 = 36

===[5단]====
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45

===[6단]====
6 * 1 = 6
6 * 2 = 12
6 * 3 = 18
6 * 4 = 24
6 * 5 = 30
6 * 6 = 36
6 * 7 = 42
6 * 8 = 48
6 * 9 = 54

===[7단]====
7 * 1 = 7
7 * 2 = 14
7 * 3 = 21
7 * 4 = 28
7 * 5 = 35
7 * 6 = 42
7 * 7 = 49
7 * 8 = 56
7 * 9 = 63

===[8단]====
8 * 1 = 8
8 * 2 = 16
8 * 3 = 24
8 * 4 = 32
8 * 5 = 40
8 * 6 = 48
8 * 7 = 56
8 * 8 = 64
8 * 9 = 72

===[9단]====
9 * 1 = 9
9 * 2 = 18
9 * 3 = 27
9 * 4 = 36
9 * 5 = 45
9 * 6 = 54
9 * 7 = 63
9 * 8 = 72
9 * 9 = 81

계속하려면 아무 키나 누르십시오 . . .
*/