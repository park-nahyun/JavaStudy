/*=====================================
  ■■■ 실행 흐름의 컨트롤(제어문) ■■■
  - 반복문 실습(while문 실습)
=====================================*/

// 1부터 100까지 정수의 합 : xxxx
// 1부터 100까지 짝수의 합 : xxxx
// 1부터 100까지 홀수의 합 : xxxx
// 계속하려면 아무 키나

public class Test046
{
	public static void main(String[] args)
	{
		// ○ 주요 변수 선언
		int n=1, sum=0, even=0, odd=0; // 1부터 시작할 정수, 합이 될 정수들
		// sum = even = odd = 0 이렇게 해도 됨. odd에 0을 대입하고 그 다음 even에 대입, 그 다음 sum에 대입하라는 뜻

		// ○ 연산 및 처리(반복문 구성)
		while (n<=100)																//	1<=100			1+=2
		{
			// 연산 수행 (1부터 시작하니까)
			// 정수 합, 짝수 합, 홀수 합 반복문 따로 구성할 수 있음(while  세 개로)
			// 그러나 반복문은 리소스 소모가 심함. 반복문이 많을 수록 컴퓨터 부하.
			// 1부터 100까지 정/짝/홀 따로 구하는 것이 나음(반복문 하나, 조건문으로 분리)

			// · 반복문이 수행되는 동안
			// → sum을 n만큼 증가시켜라...
			sum += n;																// 1%2==0 ? ㄴㄴ	2%2==0

			// · n이 짝수일 경우 
			// → even을 n만큼 증가시켜라...
					if (n%2==0)
			{
				even += n;																			  // 0 += 1
			}
			

			// n이 홀수일 경우 odd를 n만큼 증가시켜라...
			else
			{
					odd += n;														// 0 += 1
			}

			n++;																	// 1 2 3 4 ... 100
			
		}
		// ○ 결과 출력
		System.out.println("1부터 100까지 정수의 합 : " + sum);
		System.out.println("1부터 100까지 짝수의 합 : " + even);
		System.out.println("1부터 100까지 홀수의 합 : " + odd);
	}
}

/* [실행결과]
1부터 100까지 정수의 합 : 5050
1부터 100까지 짝수의 합 : 2550
1부터 100까지 홀수의 합 : 2500
계속하려면 아무 키나 누르십시오 . . .
*/